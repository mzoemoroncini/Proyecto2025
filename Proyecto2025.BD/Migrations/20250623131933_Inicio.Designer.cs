// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto2025.BD.Datos;

#nullable disable

namespace EstudioJuridico.BD.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250623131933_Inicio")]
    partial class Inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonasID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonasID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Domicilio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("LocalidadID")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Piso")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadID");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Informe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchivoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Informes");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("NomLocalidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProvinciaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaID");

                    b.HasIndex(new[] { "Codigo" }, "Localidad_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("NomPais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Codigo" }, "Pais_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DNI")
                        .HasMaxLength(45)
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TasaJusticia_Aportes")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PersonaDomicilio", b =>
                {
                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<int>("DomicilioID")
                        .HasColumnType("int");

                    b.HasKey("PersonaID", "DomicilioID");

                    b.HasIndex("DomicilioID");

                    b.ToTable("PersonasDomicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PersonaPenal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("PlantillaPenals")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("PersonasPenals");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Plantilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Tipo")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Plantillas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Delito")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EstadoCausa")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("FechaDetencion")
                        .HasColumnType("datetime2");

                    b.Property<int>("InformeId")
                        .HasColumnType("int");

                    b.Property<string>("Juzgado")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("PlantillaId")
                        .HasColumnType("int");

                    b.Property<string>("Pruebas")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RadiografiaExpediente")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InformeId");

                    b.HasIndex("PlantillaId");

                    b.ToTable("PlantillasPenals");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenalTieneTestigo", b =>
                {
                    b.Property<int>("PlantillaPenalId")
                        .HasColumnType("int");

                    b.Property<int>("TestigoId")
                        .HasColumnType("int");

                    b.HasKey("PlantillaPenalId", "TestigoId");

                    b.HasIndex("TestigoId");

                    b.ToTable("PlantillasPenalTienenTestigos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Testigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreTestigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Testigos");
                });

            modelBuilder.Entity("Proyecto2025.BD.Datos.Entity.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("NomProvincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaisID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisID");

                    b.HasIndex(new[] { "Codigo" }, "Provincia_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Cliente", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Persona", "Personas")
                        .WithMany("Clientes")
                        .HasForeignKey("PersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Domicilio", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Localidad", "Localidades")
                        .WithMany("Domicilios")
                        .HasForeignKey("LocalidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Localidad", b =>
                {
                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincias")
                        .WithMany("Localidades")
                        .HasForeignKey("ProvinciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PersonaDomicilio", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Domicilio", "Domicilios")
                        .WithMany("PersonaDomicilios")
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Persona", "Personas")
                        .WithMany("PersonaDomicilios")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilios");

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PersonaPenal", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Persona", "Personas")
                        .WithMany("PersonaPenals")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Plantilla", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Cliente", "Cliente")
                        .WithMany("Plantillas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenal", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Informe", "Informes")
                        .WithMany("plantillaPenals")
                        .HasForeignKey("InformeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Plantilla", null)
                        .WithMany("plantillaPenals")
                        .HasForeignKey("PlantillaId");

                    b.Navigation("Informes");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenalTieneTestigo", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.PlantillaPenal", "PlantillaPenals")
                        .WithMany("PlantillaPenalTieneTestigos")
                        .HasForeignKey("PlantillaPenalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Testigo", "Testigos")
                        .WithMany("plantillaPenalTieneTestigos")
                        .HasForeignKey("TestigoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlantillaPenals");

                    b.Navigation("Testigos");
                });

            modelBuilder.Entity("Proyecto2025.BD.Datos.Entity.Provincia", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Paises")
                        .WithMany("Provincias")
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paises");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Cliente", b =>
                {
                    b.Navigation("Plantillas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Domicilio", b =>
                {
                    b.Navigation("PersonaDomicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Informe", b =>
                {
                    b.Navigation("plantillaPenals");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Localidad", b =>
                {
                    b.Navigation("Domicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Pais", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Persona", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("PersonaDomicilios");

                    b.Navigation("PersonaPenals");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Plantilla", b =>
                {
                    b.Navigation("plantillaPenals");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenal", b =>
                {
                    b.Navigation("PlantillaPenalTieneTestigos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Testigo", b =>
                {
                    b.Navigation("plantillaPenalTieneTestigos");
                });

            modelBuilder.Entity("Proyecto2025.BD.Datos.Entity.Provincia", b =>
                {
                    b.Navigation("Localidades");
                });
#pragma warning restore 612, 618
        }
    }
}
