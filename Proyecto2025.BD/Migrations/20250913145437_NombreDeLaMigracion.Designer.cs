// <auto-generated />
using System;
using EstudioJuridico.BD.Datos.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstudioJuridico.BD.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250913145437_NombreDeLaMigracion")]
    partial class NombreDeLaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Caso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<int>("NumeroExpediente")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Casos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.CasoPersona", b =>
                {
                    b.Property<int>("CasoId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("CasoId", "PersonaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("CasosPersona");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Documentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchivoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("CasoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoDocumentacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasoId");

                    b.HasIndex("TipoDocumentacionId");

                    b.ToTable("Documentacions");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Domicilio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("LocalidadID")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Piso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadID");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CasoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Fin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Inicio")
                        .HasColumnType("date");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CasoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.EventoParticipante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EventoParticipantes");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("NombreLocalidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProvinciaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaID");

                    b.HasIndex(new[] { "Codigo" }, "Localidad_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CasoID")
                        .HasColumnType("int");

                    b.Property<string>("Comprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedioPago")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Monto")
                        .HasMaxLength(100)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasoID");

                    b.HasIndex("PersonaID");

                    b.HasIndex("PersonaId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.MovimientoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("MovimientoPersonas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("NomPais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Codigo" }, "Pais_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DNI")
                        .HasMaxLength(45)
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TasaJusticia_Aportes")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.PersonaDomicilio", b =>
                {
                    b.Property<int>("DomicilioID")
                        .HasColumnType("int");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<int?>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("DomicilioID", "PersonaID");

                    b.HasIndex("DomicilioId");

                    b.HasIndex("PersonaID");

                    b.ToTable("PersonaDomicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.PersonaPlantilla", b =>
                {
                    b.Property<int>("PlantillaID")
                        .HasColumnType("int");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.HasKey("PlantillaID", "PersonaID");

                    b.HasIndex("PersonaID");

                    b.ToTable("PersonaPlantillas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Plantilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plantillas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.PlantillaCaso", b =>
                {
                    b.Property<int>("PlantillaID")
                        .HasColumnType("int");

                    b.Property<int>("CasoID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("PlantillaID", "CasoID");

                    b.HasIndex("CasoID");

                    b.ToTable("PlantillaCasos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("NombreProvincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaisID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisID");

                    b.HasIndex(new[] { "Codigo" }, "Provincia_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Testigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CasoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreTestigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CasoId");

                    b.ToTable("Testigos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.TipoDocumentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.CasoPersona", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Caso", "Casos")
                        .WithMany("CasoPersonas")
                        .HasForeignKey("CasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Persona", "Personas")
                        .WithMany("CasoPersonas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Casos");

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Documentacion", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Caso", "Casos")
                        .WithMany("Documentacions")
                        .HasForeignKey("CasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.TipoDocumentacion", "TiposDocumentos")
                        .WithMany("Documentacions")
                        .HasForeignKey("TipoDocumentacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Casos");

                    b.Navigation("TiposDocumentos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Domicilio", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Localidad", "Localidades")
                        .WithMany("Domicilios")
                        .HasForeignKey("LocalidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Evento", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Caso", "Casos")
                        .WithMany("Eventos")
                        .HasForeignKey("CasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Casos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.EventoParticipante", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Evento", "Eventos")
                        .WithMany("EventoParticipantes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Persona", "Personas")
                        .WithMany("EventoParticipantes")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Usuario", "Usuarios")
                        .WithMany("EventoParticipantes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Personas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Localidad", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Provincia", "Provincias")
                        .WithMany("Localidades")
                        .HasForeignKey("ProvinciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Movimiento", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Caso", "Casos")
                        .WithMany("Movimientos")
                        .HasForeignKey("CasoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Persona", "Personas")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Persona", null)
                        .WithMany("Movimientos")
                        .HasForeignKey("PersonaId");

                    b.Navigation("Casos");

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.PersonaDomicilio", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Domicilio", "Domicilios")
                        .WithMany()
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Domicilio", null)
                        .WithMany("PersonaDomicilios")
                        .HasForeignKey("DomicilioId");

                    b.HasOne("EstudioJuridico.BD.Datos.Persona", "Personas")
                        .WithMany("PersonaDomicilios")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilios");

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.PersonaPlantilla", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Persona", "Personas")
                        .WithMany("PersonaPlantillas")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Plantilla", "Plantillas")
                        .WithMany("PersonaPlantillas")
                        .HasForeignKey("PlantillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personas");

                    b.Navigation("Plantillas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.PlantillaCaso", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Caso", "Casos")
                        .WithMany("PlantillaCasos")
                        .HasForeignKey("CasoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudioJuridico.BD.Datos.Plantilla", "Plantillas")
                        .WithMany("PlantillaCasos")
                        .HasForeignKey("PlantillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Casos");

                    b.Navigation("Plantillas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Provincia", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Pais", "Paises")
                        .WithMany("Provincias")
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paises");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Testigo", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Caso", "Caso")
                        .WithMany("Testigos")
                        .HasForeignKey("CasoId");

                    b.Navigation("Caso");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Usuario", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Persona", "Personas")
                        .WithMany("Usuarios")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Caso", b =>
                {
                    b.Navigation("CasoPersonas");

                    b.Navigation("Documentacions");

                    b.Navigation("Eventos");

                    b.Navigation("Movimientos");

                    b.Navigation("PlantillaCasos");

                    b.Navigation("Testigos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Domicilio", b =>
                {
                    b.Navigation("PersonaDomicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Evento", b =>
                {
                    b.Navigation("EventoParticipantes");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Localidad", b =>
                {
                    b.Navigation("Domicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Pais", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Persona", b =>
                {
                    b.Navigation("CasoPersonas");

                    b.Navigation("EventoParticipantes");

                    b.Navigation("Movimientos");

                    b.Navigation("PersonaDomicilios");

                    b.Navigation("PersonaPlantillas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Plantilla", b =>
                {
                    b.Navigation("PersonaPlantillas");

                    b.Navigation("PlantillaCasos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Provincia", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.TipoDocumentacion", b =>
                {
                    b.Navigation("Documentacions");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Usuario", b =>
                {
                    b.Navigation("EventoParticipantes");
                });
#pragma warning restore 612, 618
        }
    }
}
