// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto2025.BD.Datos;

#nullable disable

namespace EstudioJuridico.BD.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250622161030_Inicio")]
    partial class Inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"));

                    b.Property<int?>("DomicilioidDomicilios")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("LocalidadidLocalidades")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaidPersona")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaidProvincias")
                        .HasColumnType("int");

                    b.Property<string>("idDomicilios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPersona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idProvincias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCliente");

                    b.HasIndex("DomicilioidDomicilios");

                    b.HasIndex("LocalidadidLocalidades");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex("PersonaidPersona");

                    b.HasIndex("ProvinciaidProvincias");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Domicilio", b =>
                {
                    b.Property<int>("idDomicilios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDomicilios"));

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("LocalidadidLocalidades")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<string>("Piso")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("ProvinciaidProvincias")
                        .HasColumnType("int");

                    b.Property<string>("idLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idProvincias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idDomicilios");

                    b.HasIndex("LocalidadidLocalidades");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex("ProvinciaidProvincias");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Informe", b =>
                {
                    b.Property<int>("idInformes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idInformes"));

                    b.Property<string>("ArchivoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("idInformes");

                    b.ToTable("Informes");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Localidad", b =>
                {
                    b.Property<int>("idLocalidades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idLocalidades"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NomLocalidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaidProvincias")
                        .HasColumnType("int");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idProvincias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idLocalidades");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex("ProvinciaidProvincias");

                    b.HasIndex(new[] { "Codigo" }, "Localidad_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Pais", b =>
                {
                    b.Property<int>("idPaises")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPaises"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NomPais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPaises");

                    b.HasIndex(new[] { "Codigo" }, "Pais_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Persona", b =>
                {
                    b.Property<int>("idPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPersona"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DNI")
                        .HasMaxLength(45)
                        .HasColumnType("int");

                    b.Property<int?>("DomicilioidDomicilios")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("LocalidadidLocalidades")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaidProvincias")
                        .HasColumnType("int");

                    b.Property<bool>("TasaJusticia_Aportes")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("idDomicilios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idProvincias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPersona");

                    b.HasIndex("DomicilioidDomicilios");

                    b.HasIndex("LocalidadidLocalidades");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex("ProvinciaidProvincias");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PersonaDomicilio", b =>
                {
                    b.Property<int>("idPersonasDomicilios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPersonasDomicilios"));

                    b.Property<int?>("DomicilioidDomicilios")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaidPersona")
                        .HasColumnType("int");

                    b.Property<int>("idDomicilios")
                        .HasColumnType("int");

                    b.Property<int>("idPersona")
                        .HasColumnType("int");

                    b.HasKey("idPersonasDomicilios");

                    b.HasIndex("DomicilioidDomicilios");

                    b.HasIndex("PersonaidPersona");

                    b.ToTable("PersonasDomicilios");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PersonaPenal", b =>
                {
                    b.Property<int>("idPersonaPenal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPersonaPenal"));

                    b.Property<int?>("DomicilioidDomicilios")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("LocalidadidLocalidades")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaidProvincias")
                        .HasColumnType("int");

                    b.Property<string>("idDomicilios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idProvincias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPersonaPenal");

                    b.HasIndex("DomicilioidDomicilios");

                    b.HasIndex("LocalidadidLocalidades");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex("ProvinciaidProvincias");

                    b.ToTable("PersonasPenal");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Plantilla", b =>
                {
                    b.Property<int>("idPlantilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPlantilla"));

                    b.Property<int?>("ClienteidCliente")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("DomicilioidDomicilios")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("LocalidadidLocalidades")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaidPersona")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaidProvincias")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<string>("idClientes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idDomicilios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPersona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idProvincias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPlantilla");

                    b.HasIndex("ClienteidCliente");

                    b.HasIndex("DomicilioidDomicilios");

                    b.HasIndex("LocalidadidLocalidades");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex("PersonaidPersona");

                    b.HasIndex("ProvinciaidProvincias");

                    b.ToTable("Plantillas");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenal", b =>
                {
                    b.Property<int>("idPlantillaPenal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPlantillaPenal"));

                    b.Property<int?>("ClienteidCliente")
                        .HasColumnType("int");

                    b.Property<string>("Delito")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("DomicilioidDomicilios")
                        .HasColumnType("int");

                    b.Property<string>("EstadoCausa")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDetencion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("InformeidInformes")
                        .HasColumnType("int");

                    b.Property<string>("Juzgado")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("LocalidadidLocalidades")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaidPersona")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaidPlantilla")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaidProvincias")
                        .HasColumnType("int");

                    b.Property<string>("Pruebas")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RadiografiaExpediente")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idClientes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idDomicilios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idInformes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPersona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPlantilla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idProvincias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPlantillaPenal");

                    b.HasIndex("ClienteidCliente");

                    b.HasIndex("DomicilioidDomicilios");

                    b.HasIndex("InformeidInformes");

                    b.HasIndex("LocalidadidLocalidades");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex("PersonaidPersona");

                    b.HasIndex("PlantillaidPlantilla");

                    b.HasIndex("ProvinciaidProvincias");

                    b.ToTable("PlantillasPenal");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenalTieneTestigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteidCliente")
                        .HasColumnType("int");

                    b.Property<int?>("DomicilioidDomicilios")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int?>("InformeidInformes")
                        .HasColumnType("int");

                    b.Property<int?>("LocalidadidLocalidades")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaidPersona")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaPenalidPlantillaPenal")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaidPlantilla")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaidProvincias")
                        .HasColumnType("int");

                    b.Property<int?>("TestigoidTestigo")
                        .HasColumnType("int");

                    b.Property<string>("idClientes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idDomicilios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idInformes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPersona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPlantilla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPlantillaPenal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idProvincias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idTestigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteidCliente");

                    b.HasIndex("DomicilioidDomicilios");

                    b.HasIndex("InformeidInformes");

                    b.HasIndex("LocalidadidLocalidades");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex("PersonaidPersona");

                    b.HasIndex("PlantillaPenalidPlantillaPenal");

                    b.HasIndex("PlantillaidPlantilla");

                    b.HasIndex("ProvinciaidProvincias");

                    b.HasIndex("TestigoidTestigo");

                    b.ToTable("PlantillasPenalTienenTestigos");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Testigo", b =>
                {
                    b.Property<int>("idTestigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTestigo"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NombreTestigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTestigo");

                    b.ToTable("Testigos");
                });

            modelBuilder.Entity("Proyecto2025.BD.Datos.Entity.Provincia", b =>
                {
                    b.Property<int>("idProvincias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProvincias"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NomProvincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisidPaises")
                        .HasColumnType("int");

                    b.Property<string>("idPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProvincias");

                    b.HasIndex("PaisidPaises");

                    b.HasIndex(new[] { "Codigo" }, "Provincia_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Cliente", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioidDomicilios");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadidLocalidades");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaidPersona");

                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincias");

                    b.Navigation("Domicilio");

                    b.Navigation("Localidad");

                    b.Navigation("Pais");

                    b.Navigation("Persona");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Domicilio", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadidLocalidades");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincias");

                    b.Navigation("Localidad");

                    b.Navigation("Pais");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Localidad", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincias");

                    b.Navigation("Pais");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Persona", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioidDomicilios");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadidLocalidades");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincias");

                    b.Navigation("Domicilio");

                    b.Navigation("Localidad");

                    b.Navigation("Pais");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PersonaDomicilio", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioidDomicilios");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaidPersona");

                    b.Navigation("Domicilio");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PersonaPenal", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioidDomicilios");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadidLocalidades");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincias");

                    b.Navigation("Domicilio");

                    b.Navigation("Localidad");

                    b.Navigation("Pais");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.Plantilla", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteidCliente");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioidDomicilios");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadidLocalidades");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaidPersona");

                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincias");

                    b.Navigation("Cliente");

                    b.Navigation("Domicilio");

                    b.Navigation("Localidad");

                    b.Navigation("Pais");

                    b.Navigation("Persona");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenal", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteidCliente");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioidDomicilios");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Informe", "Informe")
                        .WithMany()
                        .HasForeignKey("InformeidInformes");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadidLocalidades");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaidPersona");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Plantilla", "Plantilla")
                        .WithMany()
                        .HasForeignKey("PlantillaidPlantilla");

                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincias");

                    b.Navigation("Cliente");

                    b.Navigation("Domicilio");

                    b.Navigation("Informe");

                    b.Navigation("Localidad");

                    b.Navigation("Pais");

                    b.Navigation("Persona");

                    b.Navigation("Plantilla");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("EstudioJuridico.BD.Datos.Entity.PlantillaPenalTieneTestigo", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteidCliente");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioidDomicilios");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Informe", "Informe")
                        .WithMany()
                        .HasForeignKey("InformeidInformes");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadidLocalidades");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaidPersona");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.PlantillaPenal", "PlantillaPenal")
                        .WithMany()
                        .HasForeignKey("PlantillaPenalidPlantillaPenal");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Plantilla", "Plantilla")
                        .WithMany()
                        .HasForeignKey("PlantillaidPlantilla");

                    b.HasOne("Proyecto2025.BD.Datos.Entity.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincias");

                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Testigo", "Testigo")
                        .WithMany()
                        .HasForeignKey("TestigoidTestigo");

                    b.Navigation("Cliente");

                    b.Navigation("Domicilio");

                    b.Navigation("Informe");

                    b.Navigation("Localidad");

                    b.Navigation("Pais");

                    b.Navigation("Persona");

                    b.Navigation("Plantilla");

                    b.Navigation("PlantillaPenal");

                    b.Navigation("Provincia");

                    b.Navigation("Testigo");
                });

            modelBuilder.Entity("Proyecto2025.BD.Datos.Entity.Provincia", b =>
                {
                    b.HasOne("EstudioJuridico.BD.Datos.Entity.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisidPaises");

                    b.Navigation("Pais");
                });
#pragma warning restore 612, 618
        }
    }
}
